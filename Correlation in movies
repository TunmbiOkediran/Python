{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Correlation in movies","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMNhT6X4AMvSL/sUOjCm9xC"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":3,"metadata":{"id":"Hm40IjS3AIsL","executionInfo":{"status":"ok","timestamp":1658326202540,"user_tz":-120,"elapsed":525,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}}},"outputs":[],"source":["# import packages\n","import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","\n","import matplotlib.pyplot as plt\n","import matplotlib.mlab as mlab\n","import matplotlib\n","plt.style.use('ggplot')\n","from matplotlib.pyplot import figure\n","\n","%matplotlib inline\n","matplotlib.rcParams['figure.figsize'] = (12,8)\n","\n","pd.options.mode.chained_assignment = None"]},{"cell_type":"code","source":["# Reading in the dataset\n","\n","df = pd.read_csv('movies.csv')\n","\n","\n","# Shape and data types of the data\n","print(df.shape)\n","print(df.dtypes)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-5o_Ft82AdvT","executionInfo":{"status":"ok","timestamp":1658326203061,"user_tz":-120,"elapsed":526,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}},"outputId":"97a061e1-75c6-4b35-e693-5cbb62b58bb5"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["(7668, 15)\n","name         object\n","rating       object\n","genre        object\n","year          int64\n","released     object\n","score       float64\n","votes       float64\n","director     object\n","writer       object\n","star         object\n","country      object\n","budget      float64\n","gross       float64\n","company      object\n","runtime     float64\n","dtype: object\n"]}]},{"cell_type":"code","source":["# Select numeric columns\n","df_numeric = df.select_dtypes(include = [np.number]) \n","numeric_cols = df_numeric.columns.values\n","print(numeric_cols)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SdzjrAmBBS1T","executionInfo":{"status":"ok","timestamp":1658326203062,"user_tz":-120,"elapsed":20,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}},"outputId":"efe43da1-9543-4983-d213-7f0824c19d89"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["['year' 'score' 'votes' 'budget' 'gross' 'runtime']\n"]}]},{"cell_type":"code","source":["# Select non_numeric columns\n","df_nonnumeric = df.select_dtypes(exclude = [np.number]) \n","nonnumeric_cols = df_nonnumeric.columns.values\n","print(nonnumeric_cols)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VqhKPrNgB5U5","executionInfo":{"status":"ok","timestamp":1658326203065,"user_tz":-120,"elapsed":18,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}},"outputId":"322de899-35db-4a1f-d970-5e3bd786f0c3"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["['name' 'rating' 'genre' 'released' 'director' 'writer' 'star' 'country'\n"," 'company']\n"]}]},{"cell_type":"code","source":["#Checking for number missing data\n","df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mds3gPYnED4l","executionInfo":{"status":"ok","timestamp":1658326203066,"user_tz":-120,"elapsed":14,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}},"outputId":"e105ba42-0ddc-4efd-c1ee-765e0b8982ba"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["name           0\n","rating        77\n","genre          0\n","year           0\n","released       2\n","score          3\n","votes          3\n","director       0\n","writer         3\n","star           1\n","country        3\n","budget      2171\n","gross        189\n","company       17\n","runtime        4\n","dtype: int64"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["#Heat map for missing data\n","\n","cols = df.columns[:] # first 30 columns\n","colours = ['#000099', '#ffff00'] # specify the colours - yellow is missing. blue is not missing.\n","sns.heatmap(df[cols].isnull(), cmap=sns.color_palette(colours))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"x1F_rU6RF2se","executionInfo":{"status":"ok","timestamp":1658326204029,"user_tz":-120,"elapsed":973,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}},"outputId":"6319b964-35a4-475f-9fa3-e45708ae54fa"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fbb27e0e6d0>"]},"metadata":{},"execution_count":8},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x576 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#histogram of missing value\n","\n","# first I created missing indicator for features with missing data\n","for col in df.columns:\n","    missing = df[col].isnull()\n","    num_missing = np.sum(missing)\n","    \n","    if num_missing > 0:  \n","       # print('created missing indicator for: {}'.format(col))\n","        df['{}_ismissing'.format(col)] = missing\n","\n","\n","# then based on this indicator, I will plot the histogram of missing values\n","\n","ismissing_cols = [col for col in df.columns if 'ismissing' in col]\n","df['num_missing'] = df[ismissing_cols].sum(axis=1)\n","\n","df['num_missing'].value_counts().reset_index().sort_values(by='index').plot.bar(x='index', y='num_missing')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4TEANqhdGJtb","executionInfo":{"status":"ok","timestamp":1658326204604,"user_tz":-120,"elapsed":585,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}},"outputId":"0481b5d3-94a7-46c4-9cce-a916eae2a970"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fbb24f261d0>"]},"metadata":{},"execution_count":9},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x576 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#I will drop all the missing values\n","\n","ind_missing = df[df['num_missing'] >= 1].index\n","df_less_missing_rows = df.drop(ind_missing, axis=0)\n","df_less_missing_rows"],"metadata":{"id":"nnf-SCXRIM1L","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658326204605,"user_tz":-120,"elapsed":40,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}},"outputId":"b871da00-6975-4fec-f27d-c01a0e2d5f43"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                name     rating      genre  \\\n","0                                        The Shining          R      Drama   \n","1                                    The Blue Lagoon          R  Adventure   \n","2     Star Wars: Episode V - The Empire Strikes Back         PG     Action   \n","3                                          Airplane!         PG     Comedy   \n","4                                         Caddyshack          R     Comedy   \n","...                                              ...        ...        ...   \n","7648                               Bad Boys for Life          R     Action   \n","7649                              Sonic the Hedgehog         PG     Action   \n","7650                                        Dolittle         PG  Adventure   \n","7651                            The Call of the Wild         PG  Adventure   \n","7652                               The Eight Hundred  Not Rated     Action   \n","\n","      year                           released  score      votes  \\\n","0     1980      June 13, 1980 (United States)    8.4   927000.0   \n","1     1980       July 2, 1980 (United States)    5.8    65000.0   \n","2     1980      June 20, 1980 (United States)    8.7  1200000.0   \n","3     1980       July 2, 1980 (United States)    7.7   221000.0   \n","4     1980      July 25, 1980 (United States)    7.3   108000.0   \n","...    ...                                ...    ...        ...   \n","7648  2020   January 17, 2020 (United States)    6.6   140000.0   \n","7649  2020  February 14, 2020 (United States)    6.5   102000.0   \n","7650  2020   January 17, 2020 (United States)    5.6    53000.0   \n","7651  2020  February 21, 2020 (United States)    6.8    42000.0   \n","7652  2020    August 28, 2020 (United States)    6.8     3700.0   \n","\n","             director                   writer               star  ...  \\\n","0     Stanley Kubrick             Stephen King     Jack Nicholson  ...   \n","1      Randal Kleiser  Henry De Vere Stacpoole     Brooke Shields  ...   \n","2      Irvin Kershner           Leigh Brackett        Mark Hamill  ...   \n","3        Jim Abrahams             Jim Abrahams        Robert Hays  ...   \n","4        Harold Ramis       Brian Doyle-Murray        Chevy Chase  ...   \n","...               ...                      ...                ...  ...   \n","7648     Adil El Arbi              Peter Craig         Will Smith  ...   \n","7649      Jeff Fowler                Pat Casey       Ben Schwartz  ...   \n","7650   Stephen Gaghan           Stephen Gaghan  Robert Downey Jr.  ...   \n","7651    Chris Sanders            Michael Green      Harrison Ford  ...   \n","7652          Hu Guan                  Hu Guan    Zhi-zhong Huang  ...   \n","\n","     score_ismissing  votes_ismissing  writer_ismissing star_ismissing  \\\n","0              False            False             False          False   \n","1              False            False             False          False   \n","2              False            False             False          False   \n","3              False            False             False          False   \n","4              False            False             False          False   \n","...              ...              ...               ...            ...   \n","7648           False            False             False          False   \n","7649           False            False             False          False   \n","7650           False            False             False          False   \n","7651           False            False             False          False   \n","7652           False            False             False          False   \n","\n","      country_ismissing  budget_ismissing  gross_ismissing  company_ismissing  \\\n","0                 False             False            False              False   \n","1                 False             False            False              False   \n","2                 False             False            False              False   \n","3                 False             False            False              False   \n","4                 False             False            False              False   \n","...                 ...               ...              ...                ...   \n","7648              False             False            False              False   \n","7649              False             False            False              False   \n","7650              False             False            False              False   \n","7651              False             False            False              False   \n","7652              False             False            False              False   \n","\n","      runtime_ismissing  num_missing  \n","0                 False            0  \n","1                 False            0  \n","2                 False            0  \n","3                 False            0  \n","4                 False            0  \n","...                 ...          ...  \n","7648              False            0  \n","7649              False            0  \n","7650              False            0  \n","7651              False            0  \n","7652              False            0  \n","\n","[5421 rows x 27 columns]"],"text/html":["\n","  <div id=\"df-0fa4410f-ba55-4b41-bf69-c31ef36fa905\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>rating</th>\n","      <th>genre</th>\n","      <th>year</th>\n","      <th>released</th>\n","      <th>score</th>\n","      <th>votes</th>\n","      <th>director</th>\n","      <th>writer</th>\n","      <th>star</th>\n","      <th>...</th>\n","      <th>score_ismissing</th>\n","      <th>votes_ismissing</th>\n","      <th>writer_ismissing</th>\n","      <th>star_ismissing</th>\n","      <th>country_ismissing</th>\n","      <th>budget_ismissing</th>\n","      <th>gross_ismissing</th>\n","      <th>company_ismissing</th>\n","      <th>runtime_ismissing</th>\n","      <th>num_missing</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>The Shining</td>\n","      <td>R</td>\n","      <td>Drama</td>\n","      <td>1980</td>\n","      <td>June 13, 1980 (United States)</td>\n","      <td>8.4</td>\n","      <td>927000.0</td>\n","      <td>Stanley Kubrick</td>\n","      <td>Stephen King</td>\n","      <td>Jack Nicholson</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>The Blue Lagoon</td>\n","      <td>R</td>\n","      <td>Adventure</td>\n","      <td>1980</td>\n","      <td>July 2, 1980 (United States)</td>\n","      <td>5.8</td>\n","      <td>65000.0</td>\n","      <td>Randal Kleiser</td>\n","      <td>Henry De Vere Stacpoole</td>\n","      <td>Brooke Shields</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Star Wars: Episode V - The Empire Strikes Back</td>\n","      <td>PG</td>\n","      <td>Action</td>\n","      <td>1980</td>\n","      <td>June 20, 1980 (United States)</td>\n","      <td>8.7</td>\n","      <td>1200000.0</td>\n","      <td>Irvin Kershner</td>\n","      <td>Leigh Brackett</td>\n","      <td>Mark Hamill</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Airplane!</td>\n","      <td>PG</td>\n","      <td>Comedy</td>\n","      <td>1980</td>\n","      <td>July 2, 1980 (United States)</td>\n","      <td>7.7</td>\n","      <td>221000.0</td>\n","      <td>Jim Abrahams</td>\n","      <td>Jim Abrahams</td>\n","      <td>Robert Hays</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Caddyshack</td>\n","      <td>R</td>\n","      <td>Comedy</td>\n","      <td>1980</td>\n","      <td>July 25, 1980 (United States)</td>\n","      <td>7.3</td>\n","      <td>108000.0</td>\n","      <td>Harold Ramis</td>\n","      <td>Brian Doyle-Murray</td>\n","      <td>Chevy Chase</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7648</th>\n","      <td>Bad Boys for Life</td>\n","      <td>R</td>\n","      <td>Action</td>\n","      <td>2020</td>\n","      <td>January 17, 2020 (United States)</td>\n","      <td>6.6</td>\n","      <td>140000.0</td>\n","      <td>Adil El Arbi</td>\n","      <td>Peter Craig</td>\n","      <td>Will Smith</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7649</th>\n","      <td>Sonic the Hedgehog</td>\n","      <td>PG</td>\n","      <td>Action</td>\n","      <td>2020</td>\n","      <td>February 14, 2020 (United States)</td>\n","      <td>6.5</td>\n","      <td>102000.0</td>\n","      <td>Jeff Fowler</td>\n","      <td>Pat Casey</td>\n","      <td>Ben Schwartz</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7650</th>\n","      <td>Dolittle</td>\n","      <td>PG</td>\n","      <td>Adventure</td>\n","      <td>2020</td>\n","      <td>January 17, 2020 (United States)</td>\n","      <td>5.6</td>\n","      <td>53000.0</td>\n","      <td>Stephen Gaghan</td>\n","      <td>Stephen Gaghan</td>\n","      <td>Robert Downey Jr.</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7651</th>\n","      <td>The Call of the Wild</td>\n","      <td>PG</td>\n","      <td>Adventure</td>\n","      <td>2020</td>\n","      <td>February 21, 2020 (United States)</td>\n","      <td>6.8</td>\n","      <td>42000.0</td>\n","      <td>Chris Sanders</td>\n","      <td>Michael Green</td>\n","      <td>Harrison Ford</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7652</th>\n","      <td>The Eight Hundred</td>\n","      <td>Not Rated</td>\n","      <td>Action</td>\n","      <td>2020</td>\n","      <td>August 28, 2020 (United States)</td>\n","      <td>6.8</td>\n","      <td>3700.0</td>\n","      <td>Hu Guan</td>\n","      <td>Hu Guan</td>\n","      <td>Zhi-zhong Huang</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5421 rows × 27 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0fa4410f-ba55-4b41-bf69-c31ef36fa905')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-0fa4410f-ba55-4b41-bf69-c31ef36fa905 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-0fa4410f-ba55-4b41-bf69-c31ef36fa905');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df_less_missing_rows.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nj_3YMZ_dW-T","executionInfo":{"status":"ok","timestamp":1658326204607,"user_tz":-120,"elapsed":39,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}},"outputId":"f9abe571-6789-4c70-8ff2-0a0137b3bc32"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["name                  0\n","rating                0\n","genre                 0\n","year                  0\n","released              0\n","score                 0\n","votes                 0\n","director              0\n","writer                0\n","star                  0\n","country               0\n","budget                0\n","gross                 0\n","company               0\n","runtime               0\n","rating_ismissing      0\n","released_ismissing    0\n","score_ismissing       0\n","votes_ismissing       0\n","writer_ismissing      0\n","star_ismissing        0\n","country_ismissing     0\n","budget_ismissing      0\n","gross_ismissing       0\n","company_ismissing     0\n","runtime_ismissing     0\n","num_missing           0\n","dtype: int64"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["df_less_missing_rows.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mi4HvKJ7dhnp","executionInfo":{"status":"ok","timestamp":1658326204608,"user_tz":-120,"elapsed":36,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}},"outputId":"1a9bfe0b-5275-4858-df76-64648269854b"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              year        score         votes        budget         gross  \\\n","count  5421.000000  5421.000000  5.421000e+03  5.421000e+03  5.421000e+03   \n","mean   2001.661317     6.392455  1.150661e+05  3.600917e+07  1.032297e+08   \n","std      10.540908     0.962730  1.844073e+05  4.157337e+07  1.873027e+08   \n","min    1980.000000     1.900000  1.950000e+02  6.000000e+03  3.090000e+02   \n","25%    1993.000000     5.800000  1.900000e+04  1.000000e+07  1.073640e+07   \n","50%    2002.000000     6.500000  5.200000e+04  2.180000e+07  3.686941e+07   \n","75%    2011.000000     7.100000  1.290000e+05  4.500000e+07  1.124625e+08   \n","max    2020.000000     9.300000  2.400000e+06  3.560000e+08  2.847246e+09   \n","\n","           runtime  num_missing  \n","count  5421.000000       5421.0  \n","mean    108.152739          0.0  \n","std      18.115698          0.0  \n","min      63.000000          0.0  \n","25%      95.000000          0.0  \n","50%     105.000000          0.0  \n","75%     118.000000          0.0  \n","max     271.000000          0.0  "],"text/html":["\n","  <div id=\"df-f835059e-339f-4521-81a9-6a6b4d7f7be2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>score</th>\n","      <th>votes</th>\n","      <th>budget</th>\n","      <th>gross</th>\n","      <th>runtime</th>\n","      <th>num_missing</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>5421.000000</td>\n","      <td>5421.000000</td>\n","      <td>5.421000e+03</td>\n","      <td>5.421000e+03</td>\n","      <td>5.421000e+03</td>\n","      <td>5421.000000</td>\n","      <td>5421.0</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2001.661317</td>\n","      <td>6.392455</td>\n","      <td>1.150661e+05</td>\n","      <td>3.600917e+07</td>\n","      <td>1.032297e+08</td>\n","      <td>108.152739</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>10.540908</td>\n","      <td>0.962730</td>\n","      <td>1.844073e+05</td>\n","      <td>4.157337e+07</td>\n","      <td>1.873027e+08</td>\n","      <td>18.115698</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1980.000000</td>\n","      <td>1.900000</td>\n","      <td>1.950000e+02</td>\n","      <td>6.000000e+03</td>\n","      <td>3.090000e+02</td>\n","      <td>63.000000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1993.000000</td>\n","      <td>5.800000</td>\n","      <td>1.900000e+04</td>\n","      <td>1.000000e+07</td>\n","      <td>1.073640e+07</td>\n","      <td>95.000000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2002.000000</td>\n","      <td>6.500000</td>\n","      <td>5.200000e+04</td>\n","      <td>2.180000e+07</td>\n","      <td>3.686941e+07</td>\n","      <td>105.000000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2011.000000</td>\n","      <td>7.100000</td>\n","      <td>1.290000e+05</td>\n","      <td>4.500000e+07</td>\n","      <td>1.124625e+08</td>\n","      <td>118.000000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2020.000000</td>\n","      <td>9.300000</td>\n","      <td>2.400000e+06</td>\n","      <td>3.560000e+08</td>\n","      <td>2.847246e+09</td>\n","      <td>271.000000</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f835059e-339f-4521-81a9-6a6b4d7f7be2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f835059e-339f-4521-81a9-6a6b4d7f7be2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f835059e-339f-4521-81a9-6a6b4d7f7be2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["df_new = df_less_missing_rows.iloc[:,0:15]\n","df_new.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zCZYKf6Ue91B","executionInfo":{"status":"ok","timestamp":1658326204609,"user_tz":-120,"elapsed":34,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}},"outputId":"41f10bb9-7370-422b-c8a9-3339660e1810"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                             name rating      genre  year  \\\n","0                                     The Shining      R      Drama  1980   \n","1                                 The Blue Lagoon      R  Adventure  1980   \n","2  Star Wars: Episode V - The Empire Strikes Back     PG     Action  1980   \n","3                                       Airplane!     PG     Comedy  1980   \n","4                                      Caddyshack      R     Comedy  1980   \n","\n","                        released  score      votes         director  \\\n","0  June 13, 1980 (United States)    8.4   927000.0  Stanley Kubrick   \n","1   July 2, 1980 (United States)    5.8    65000.0   Randal Kleiser   \n","2  June 20, 1980 (United States)    8.7  1200000.0   Irvin Kershner   \n","3   July 2, 1980 (United States)    7.7   221000.0     Jim Abrahams   \n","4  July 25, 1980 (United States)    7.3   108000.0     Harold Ramis   \n","\n","                    writer            star         country      budget  \\\n","0             Stephen King  Jack Nicholson  United Kingdom  19000000.0   \n","1  Henry De Vere Stacpoole  Brooke Shields   United States   4500000.0   \n","2           Leigh Brackett     Mark Hamill   United States  18000000.0   \n","3             Jim Abrahams     Robert Hays   United States   3500000.0   \n","4       Brian Doyle-Murray     Chevy Chase   United States   6000000.0   \n","\n","         gross             company  runtime  \n","0   46998772.0        Warner Bros.    146.0  \n","1   58853106.0   Columbia Pictures    104.0  \n","2  538375067.0           Lucasfilm    124.0  \n","3   83453539.0  Paramount Pictures     88.0  \n","4   39846344.0      Orion Pictures     98.0  "],"text/html":["\n","  <div id=\"df-ada7c734-93c0-4a5a-a6bc-48cc41b1435b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>rating</th>\n","      <th>genre</th>\n","      <th>year</th>\n","      <th>released</th>\n","      <th>score</th>\n","      <th>votes</th>\n","      <th>director</th>\n","      <th>writer</th>\n","      <th>star</th>\n","      <th>country</th>\n","      <th>budget</th>\n","      <th>gross</th>\n","      <th>company</th>\n","      <th>runtime</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>The Shining</td>\n","      <td>R</td>\n","      <td>Drama</td>\n","      <td>1980</td>\n","      <td>June 13, 1980 (United States)</td>\n","      <td>8.4</td>\n","      <td>927000.0</td>\n","      <td>Stanley Kubrick</td>\n","      <td>Stephen King</td>\n","      <td>Jack Nicholson</td>\n","      <td>United Kingdom</td>\n","      <td>19000000.0</td>\n","      <td>46998772.0</td>\n","      <td>Warner Bros.</td>\n","      <td>146.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>The Blue Lagoon</td>\n","      <td>R</td>\n","      <td>Adventure</td>\n","      <td>1980</td>\n","      <td>July 2, 1980 (United States)</td>\n","      <td>5.8</td>\n","      <td>65000.0</td>\n","      <td>Randal Kleiser</td>\n","      <td>Henry De Vere Stacpoole</td>\n","      <td>Brooke Shields</td>\n","      <td>United States</td>\n","      <td>4500000.0</td>\n","      <td>58853106.0</td>\n","      <td>Columbia Pictures</td>\n","      <td>104.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Star Wars: Episode V - The Empire Strikes Back</td>\n","      <td>PG</td>\n","      <td>Action</td>\n","      <td>1980</td>\n","      <td>June 20, 1980 (United States)</td>\n","      <td>8.7</td>\n","      <td>1200000.0</td>\n","      <td>Irvin Kershner</td>\n","      <td>Leigh Brackett</td>\n","      <td>Mark Hamill</td>\n","      <td>United States</td>\n","      <td>18000000.0</td>\n","      <td>538375067.0</td>\n","      <td>Lucasfilm</td>\n","      <td>124.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Airplane!</td>\n","      <td>PG</td>\n","      <td>Comedy</td>\n","      <td>1980</td>\n","      <td>July 2, 1980 (United States)</td>\n","      <td>7.7</td>\n","      <td>221000.0</td>\n","      <td>Jim Abrahams</td>\n","      <td>Jim Abrahams</td>\n","      <td>Robert Hays</td>\n","      <td>United States</td>\n","      <td>3500000.0</td>\n","      <td>83453539.0</td>\n","      <td>Paramount Pictures</td>\n","      <td>88.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Caddyshack</td>\n","      <td>R</td>\n","      <td>Comedy</td>\n","      <td>1980</td>\n","      <td>July 25, 1980 (United States)</td>\n","      <td>7.3</td>\n","      <td>108000.0</td>\n","      <td>Harold Ramis</td>\n","      <td>Brian Doyle-Murray</td>\n","      <td>Chevy Chase</td>\n","      <td>United States</td>\n","      <td>6000000.0</td>\n","      <td>39846344.0</td>\n","      <td>Orion Pictures</td>\n","      <td>98.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ada7c734-93c0-4a5a-a6bc-48cc41b1435b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ada7c734-93c0-4a5a-a6bc-48cc41b1435b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ada7c734-93c0-4a5a-a6bc-48cc41b1435b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["del df_new['released']\n","df_new.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7b9dMvyzkFAs","executionInfo":{"status":"ok","timestamp":1658326204610,"user_tz":-120,"elapsed":33,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}},"outputId":"9fbc1278-9e0c-481e-819d-0ccc770bf22c"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                             name rating      genre  year  \\\n","0                                     The Shining      R      Drama  1980   \n","1                                 The Blue Lagoon      R  Adventure  1980   \n","2  Star Wars: Episode V - The Empire Strikes Back     PG     Action  1980   \n","3                                       Airplane!     PG     Comedy  1980   \n","4                                      Caddyshack      R     Comedy  1980   \n","\n","   score      votes         director                   writer            star  \\\n","0    8.4   927000.0  Stanley Kubrick             Stephen King  Jack Nicholson   \n","1    5.8    65000.0   Randal Kleiser  Henry De Vere Stacpoole  Brooke Shields   \n","2    8.7  1200000.0   Irvin Kershner           Leigh Brackett     Mark Hamill   \n","3    7.7   221000.0     Jim Abrahams             Jim Abrahams     Robert Hays   \n","4    7.3   108000.0     Harold Ramis       Brian Doyle-Murray     Chevy Chase   \n","\n","          country      budget        gross             company  runtime  \n","0  United Kingdom  19000000.0   46998772.0        Warner Bros.    146.0  \n","1   United States   4500000.0   58853106.0   Columbia Pictures    104.0  \n","2   United States  18000000.0  538375067.0           Lucasfilm    124.0  \n","3   United States   3500000.0   83453539.0  Paramount Pictures     88.0  \n","4   United States   6000000.0   39846344.0      Orion Pictures     98.0  "],"text/html":["\n","  <div id=\"df-61470b81-cd12-4d9b-8401-37bdb3934a6b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>rating</th>\n","      <th>genre</th>\n","      <th>year</th>\n","      <th>score</th>\n","      <th>votes</th>\n","      <th>director</th>\n","      <th>writer</th>\n","      <th>star</th>\n","      <th>country</th>\n","      <th>budget</th>\n","      <th>gross</th>\n","      <th>company</th>\n","      <th>runtime</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>The Shining</td>\n","      <td>R</td>\n","      <td>Drama</td>\n","      <td>1980</td>\n","      <td>8.4</td>\n","      <td>927000.0</td>\n","      <td>Stanley Kubrick</td>\n","      <td>Stephen King</td>\n","      <td>Jack Nicholson</td>\n","      <td>United Kingdom</td>\n","      <td>19000000.0</td>\n","      <td>46998772.0</td>\n","      <td>Warner Bros.</td>\n","      <td>146.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>The Blue Lagoon</td>\n","      <td>R</td>\n","      <td>Adventure</td>\n","      <td>1980</td>\n","      <td>5.8</td>\n","      <td>65000.0</td>\n","      <td>Randal Kleiser</td>\n","      <td>Henry De Vere Stacpoole</td>\n","      <td>Brooke Shields</td>\n","      <td>United States</td>\n","      <td>4500000.0</td>\n","      <td>58853106.0</td>\n","      <td>Columbia Pictures</td>\n","      <td>104.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Star Wars: Episode V - The Empire Strikes Back</td>\n","      <td>PG</td>\n","      <td>Action</td>\n","      <td>1980</td>\n","      <td>8.7</td>\n","      <td>1200000.0</td>\n","      <td>Irvin Kershner</td>\n","      <td>Leigh Brackett</td>\n","      <td>Mark Hamill</td>\n","      <td>United States</td>\n","      <td>18000000.0</td>\n","      <td>538375067.0</td>\n","      <td>Lucasfilm</td>\n","      <td>124.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Airplane!</td>\n","      <td>PG</td>\n","      <td>Comedy</td>\n","      <td>1980</td>\n","      <td>7.7</td>\n","      <td>221000.0</td>\n","      <td>Jim Abrahams</td>\n","      <td>Jim Abrahams</td>\n","      <td>Robert Hays</td>\n","      <td>United States</td>\n","      <td>3500000.0</td>\n","      <td>83453539.0</td>\n","      <td>Paramount Pictures</td>\n","      <td>88.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Caddyshack</td>\n","      <td>R</td>\n","      <td>Comedy</td>\n","      <td>1980</td>\n","      <td>7.3</td>\n","      <td>108000.0</td>\n","      <td>Harold Ramis</td>\n","      <td>Brian Doyle-Murray</td>\n","      <td>Chevy Chase</td>\n","      <td>United States</td>\n","      <td>6000000.0</td>\n","      <td>39846344.0</td>\n","      <td>Orion Pictures</td>\n","      <td>98.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-61470b81-cd12-4d9b-8401-37bdb3934a6b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-61470b81-cd12-4d9b-8401-37bdb3934a6b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-61470b81-cd12-4d9b-8401-37bdb3934a6b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["df_new['votes'] = df_new['votes'].astype('int64')\n","df_new['budget'] = df_new['budget'].astype('int64')\n","df_new['gross'] = df_new['gross'].astype('int64')\n","df_new['runtime'] = df_new['runtime'].astype('int64')\n","df_new['year']= pd.to_datetime(df_new['year'])\n","df_new.dtypes"],"metadata":{"id":"deU4VxMSkleb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1658326204611,"user_tz":-120,"elapsed":31,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}},"outputId":"3c887ad1-45da-4877-e413-96c7b5e54ada"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["name                object\n","rating              object\n","genre               object\n","year        datetime64[ns]\n","score              float64\n","votes                int64\n","director            object\n","writer              object\n","star                object\n","country             object\n","budget               int64\n","gross                int64\n","company             object\n","runtime              int64\n","dtype: object"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["# Now the data is clean, I would remark here that deleting of the whole \n","# observation due to missing value is not recommended pratice.\n","# I deleted the column 'released' because it was redundant."],"metadata":{"id":"yLVx7mchlwp7","executionInfo":{"status":"ok","timestamp":1658326204612,"user_tz":-120,"elapsed":26,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["df_new['score'].hist(bins=100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BbebKBqurWwU","executionInfo":{"status":"ok","timestamp":1658326204991,"user_tz":-120,"elapsed":404,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}},"outputId":"0042a30f-98ac-44f4-bb9c-77fca6a59778"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fbb24ec2dd0>"]},"metadata":{},"execution_count":17},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x576 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["df_new['votes'].hist(bins=100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"R4tCoz5crGNd","executionInfo":{"status":"ok","timestamp":1658326205861,"user_tz":-120,"elapsed":879,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}},"outputId":"39b2a82c-09df-4a11-cd37-c8b7e165c953"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fbb24ca6690>"]},"metadata":{},"execution_count":18},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x576 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["df_new['budget'].hist(bins=100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5Id6k32SrSMx","executionInfo":{"status":"ok","timestamp":1658326206282,"user_tz":-120,"elapsed":431,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}},"outputId":"e3609e02-2990-4f10-f166-e537f8de1530"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fbb24b7d610>"]},"metadata":{},"execution_count":19},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x576 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["df_new['gross'].hist(bins=100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pkLrhLezrQgB","executionInfo":{"status":"ok","timestamp":1658326206868,"user_tz":-120,"elapsed":596,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}},"outputId":"05032dea-a29f-4d9d-c6b3-f202ad0b92b1"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fbb24952b90>"]},"metadata":{},"execution_count":20},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x576 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["df_new['runtime'].hist(bins=100)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o6uYNn1qrQSt","executionInfo":{"status":"ok","timestamp":1658326206869,"user_tz":-120,"elapsed":18,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}},"outputId":"2f3c617e-6022-47a2-ab60-46210505e54d"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fbb247d1350>"]},"metadata":{},"execution_count":21},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x576 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["#For numeric columns, correlation is easily done using Spearman because the data\n","# is no normally distributed"],"metadata":{"id":"y0oM-1ijpzvS","executionInfo":{"status":"ok","timestamp":1658326206870,"user_tz":-120,"elapsed":11,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["corr_matrix = df_new.corr('kendall')\n","corr_matrix.style.background_gradient(cmap='coolwarm')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OQtiG31_qCdg","executionInfo":{"status":"ok","timestamp":1658326207487,"user_tz":-120,"elapsed":21,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}},"outputId":"0d40a9ee-c765-4a46-f021-d511b0375a19"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<pandas.io.formats.style.Styler at 0x7fbb24987110>"],"text/html":["<style type=\"text/css\">\n","#T_019a7_row0_col0, #T_019a7_row1_col1, #T_019a7_row2_col2, #T_019a7_row3_col3, #T_019a7_row4_col4 {\n","  background-color: #b40426;\n","  color: #f1f1f1;\n","}\n","#T_019a7_row0_col1 {\n","  background-color: #7597f6;\n","  color: #f1f1f1;\n","}\n","#T_019a7_row0_col2, #T_019a7_row0_col3, #T_019a7_row2_col0, #T_019a7_row3_col4, #T_019a7_row4_col1 {\n","  background-color: #3b4cc0;\n","  color: #f1f1f1;\n","}\n","#T_019a7_row0_col4 {\n","  background-color: #6687ed;\n","  color: #f1f1f1;\n","}\n","#T_019a7_row1_col0 {\n","  background-color: #b1cbfc;\n","  color: #000000;\n","}\n","#T_019a7_row1_col2 {\n","  background-color: #afcafc;\n","  color: #000000;\n","}\n","#T_019a7_row1_col3 {\n","  background-color: #dadce0;\n","  color: #000000;\n","}\n","#T_019a7_row1_col4 {\n","  background-color: #445acc;\n","  color: #f1f1f1;\n","}\n","#T_019a7_row2_col1 {\n","  background-color: #7396f5;\n","  color: #f1f1f1;\n","}\n","#T_019a7_row2_col3 {\n","  background-color: #cdd9ec;\n","  color: #000000;\n","}\n","#T_019a7_row2_col4 {\n","  background-color: #4e68d8;\n","  color: #f1f1f1;\n","}\n","#T_019a7_row3_col0 {\n","  background-color: #6384eb;\n","  color: #f1f1f1;\n","}\n","#T_019a7_row3_col1 {\n","  background-color: #ccd9ed;\n","  color: #000000;\n","}\n","#T_019a7_row3_col2 {\n","  background-color: #e0dbd8;\n","  color: #000000;\n","}\n","#T_019a7_row4_col0 {\n","  background-color: #9dbdff;\n","  color: #000000;\n","}\n","#T_019a7_row4_col2 {\n","  background-color: #88abfd;\n","  color: #000000;\n","}\n","#T_019a7_row4_col3 {\n","  background-color: #4c66d6;\n","  color: #f1f1f1;\n","}\n","</style>\n","<table id=\"T_019a7_\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th class=\"blank level0\" >&nbsp;</th>\n","      <th class=\"col_heading level0 col0\" >score</th>\n","      <th class=\"col_heading level0 col1\" >votes</th>\n","      <th class=\"col_heading level0 col2\" >budget</th>\n","      <th class=\"col_heading level0 col3\" >gross</th>\n","      <th class=\"col_heading level0 col4\" >runtime</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th id=\"T_019a7_level0_row0\" class=\"row_heading level0 row0\" >score</th>\n","      <td id=\"T_019a7_row0_col0\" class=\"data row0 col0\" >1.000000</td>\n","      <td id=\"T_019a7_row0_col1\" class=\"data row0 col1\" >0.350185</td>\n","      <td id=\"T_019a7_row0_col2\" class=\"data row0 col2\" >-0.006406</td>\n","      <td id=\"T_019a7_row0_col3\" class=\"data row0 col3\" >0.124943</td>\n","      <td id=\"T_019a7_row0_col4\" class=\"data row0 col4\" >0.292254</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_019a7_level0_row1\" class=\"row_heading level0 row1\" >votes</th>\n","      <td id=\"T_019a7_row1_col0\" class=\"data row1 col0\" >0.350185</td>\n","      <td id=\"T_019a7_row1_col1\" class=\"data row1 col1\" >1.000000</td>\n","      <td id=\"T_019a7_row1_col2\" class=\"data row1 col2\" >0.346274</td>\n","      <td id=\"T_019a7_row1_col3\" class=\"data row1 col3\" >0.553625</td>\n","      <td id=\"T_019a7_row1_col4\" class=\"data row1 col4\" >0.205344</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_019a7_level0_row2\" class=\"row_heading level0 row2\" >budget</th>\n","      <td id=\"T_019a7_row2_col0\" class=\"data row2 col0\" >-0.006406</td>\n","      <td id=\"T_019a7_row2_col1\" class=\"data row2 col1\" >0.346274</td>\n","      <td id=\"T_019a7_row2_col2\" class=\"data row2 col2\" >1.000000</td>\n","      <td id=\"T_019a7_row2_col3\" class=\"data row2 col3\" >0.512057</td>\n","      <td id=\"T_019a7_row2_col4\" class=\"data row2 col4\" >0.231278</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_019a7_level0_row3\" class=\"row_heading level0 row3\" >gross</th>\n","      <td id=\"T_019a7_row3_col0\" class=\"data row3 col0\" >0.124943</td>\n","      <td id=\"T_019a7_row3_col1\" class=\"data row3 col1\" >0.553625</td>\n","      <td id=\"T_019a7_row3_col2\" class=\"data row3 col2\" >0.512057</td>\n","      <td id=\"T_019a7_row3_col3\" class=\"data row3 col3\" >1.000000</td>\n","      <td id=\"T_019a7_row3_col4\" class=\"data row3 col4\" >0.176979</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_019a7_level0_row4\" class=\"row_heading level0 row4\" >runtime</th>\n","      <td id=\"T_019a7_row4_col0\" class=\"data row4 col0\" >0.292254</td>\n","      <td id=\"T_019a7_row4_col1\" class=\"data row4 col1\" >0.205344</td>\n","      <td id=\"T_019a7_row4_col2\" class=\"data row4 col2\" >0.231278</td>\n","      <td id=\"T_019a7_row4_col3\" class=\"data row4 col3\" >0.176979</td>\n","      <td id=\"T_019a7_row4_col4\" class=\"data row4 col4\" >1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["corr_matrix = df_new.corr('pearson')\n","corr_matrix.style.background_gradient(cmap='coolwarm')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gQYGjBuUqvmL","executionInfo":{"status":"ok","timestamp":1658326207488,"user_tz":-120,"elapsed":19,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}},"outputId":"6bc7f038-e854-44d1-dffb-a7c5e75e3bf8"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<pandas.io.formats.style.Styler at 0x7fbb24622490>"],"text/html":["<style type=\"text/css\">\n","#T_d5ad0_row0_col0, #T_d5ad0_row1_col1, #T_d5ad0_row2_col2, #T_d5ad0_row3_col3, #T_d5ad0_row4_col4 {\n","  background-color: #b40426;\n","  color: #f1f1f1;\n","}\n","#T_d5ad0_row0_col1, #T_d5ad0_row0_col4 {\n","  background-color: #779af7;\n","  color: #f1f1f1;\n","}\n","#T_d5ad0_row0_col2, #T_d5ad0_row0_col3, #T_d5ad0_row2_col0, #T_d5ad0_row3_col4, #T_d5ad0_row4_col1 {\n","  background-color: #3b4cc0;\n","  color: #f1f1f1;\n","}\n","#T_d5ad0_row1_col0 {\n","  background-color: #cad8ef;\n","  color: #000000;\n","}\n","#T_d5ad0_row1_col2 {\n","  background-color: #bfd3f6;\n","  color: #000000;\n","}\n","#T_d5ad0_row1_col3 {\n","  background-color: #dedcdb;\n","  color: #000000;\n","}\n","#T_d5ad0_row1_col4 {\n","  background-color: #5b7ae5;\n","  color: #f1f1f1;\n","}\n","#T_d5ad0_row2_col1 {\n","  background-color: #6485ec;\n","  color: #f1f1f1;\n","}\n","#T_d5ad0_row2_col3 {\n","  background-color: #f7b89c;\n","  color: #000000;\n","}\n","#T_d5ad0_row2_col4 {\n","  background-color: #4c66d6;\n","  color: #f1f1f1;\n","}\n","#T_d5ad0_row3_col0 {\n","  background-color: #6e90f2;\n","  color: #f1f1f1;\n","}\n","#T_d5ad0_row3_col1 {\n","  background-color: #c1d4f4;\n","  color: #000000;\n","}\n","#T_d5ad0_row3_col2 {\n","  background-color: #f6a586;\n","  color: #000000;\n","}\n","#T_d5ad0_row4_col0 {\n","  background-color: #b6cefa;\n","  color: #000000;\n","}\n","#T_d5ad0_row4_col2 {\n","  background-color: #93b5fe;\n","  color: #000000;\n","}\n","#T_d5ad0_row4_col3 {\n","  background-color: #4f69d9;\n","  color: #f1f1f1;\n","}\n","</style>\n","<table id=\"T_d5ad0_\" class=\"dataframe\">\n","  <thead>\n","    <tr>\n","      <th class=\"blank level0\" >&nbsp;</th>\n","      <th class=\"col_heading level0 col0\" >score</th>\n","      <th class=\"col_heading level0 col1\" >votes</th>\n","      <th class=\"col_heading level0 col2\" >budget</th>\n","      <th class=\"col_heading level0 col3\" >gross</th>\n","      <th class=\"col_heading level0 col4\" >runtime</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th id=\"T_d5ad0_level0_row0\" class=\"row_heading level0 row0\" >score</th>\n","      <td id=\"T_d5ad0_row0_col0\" class=\"data row0 col0\" >1.000000</td>\n","      <td id=\"T_d5ad0_row0_col1\" class=\"data row0 col1\" >0.474256</td>\n","      <td id=\"T_d5ad0_row0_col2\" class=\"data row0 col2\" >0.072001</td>\n","      <td id=\"T_d5ad0_row0_col3\" class=\"data row0 col3\" >0.222556</td>\n","      <td id=\"T_d5ad0_row0_col4\" class=\"data row0 col4\" >0.414068</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d5ad0_level0_row1\" class=\"row_heading level0 row1\" >votes</th>\n","      <td id=\"T_d5ad0_row1_col0\" class=\"data row1 col0\" >0.474256</td>\n","      <td id=\"T_d5ad0_row1_col1\" class=\"data row1 col1\" >1.000000</td>\n","      <td id=\"T_d5ad0_row1_col2\" class=\"data row1 col2\" >0.439675</td>\n","      <td id=\"T_d5ad0_row1_col3\" class=\"data row1 col3\" >0.614751</td>\n","      <td id=\"T_d5ad0_row1_col4\" class=\"data row1 col4\" >0.352303</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d5ad0_level0_row2\" class=\"row_heading level0 row2\" >budget</th>\n","      <td id=\"T_d5ad0_row2_col0\" class=\"data row2 col0\" >0.072001</td>\n","      <td id=\"T_d5ad0_row2_col1\" class=\"data row2 col1\" >0.439675</td>\n","      <td id=\"T_d5ad0_row2_col2\" class=\"data row2 col2\" >1.000000</td>\n","      <td id=\"T_d5ad0_row2_col3\" class=\"data row2 col3\" >0.740247</td>\n","      <td id=\"T_d5ad0_row2_col4\" class=\"data row2 col4\" >0.318695</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d5ad0_level0_row3\" class=\"row_heading level0 row3\" >gross</th>\n","      <td id=\"T_d5ad0_row3_col0\" class=\"data row3 col0\" >0.222556</td>\n","      <td id=\"T_d5ad0_row3_col1\" class=\"data row3 col1\" >0.614751</td>\n","      <td id=\"T_d5ad0_row3_col2\" class=\"data row3 col2\" >0.740247</td>\n","      <td id=\"T_d5ad0_row3_col3\" class=\"data row3 col3\" >1.000000</td>\n","      <td id=\"T_d5ad0_row3_col4\" class=\"data row3 col4\" >0.275796</td>\n","    </tr>\n","    <tr>\n","      <th id=\"T_d5ad0_level0_row4\" class=\"row_heading level0 row4\" >runtime</th>\n","      <td id=\"T_d5ad0_row4_col0\" class=\"data row4 col0\" >0.414068</td>\n","      <td id=\"T_d5ad0_row4_col1\" class=\"data row4 col1\" >0.352303</td>\n","      <td id=\"T_d5ad0_row4_col2\" class=\"data row4 col2\" >0.318695</td>\n","      <td id=\"T_d5ad0_row4_col3\" class=\"data row4 col3\" >0.275796</td>\n","      <td id=\"T_d5ad0_row4_col4\" class=\"data row4 col4\" >1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["#For non-numeric attributes, we can't do correlation, so we can try and see with\n","#respect to gross, what each attributes contributes\n","#And this will be best carried out on Tableau or PowerBI"],"metadata":{"id":"tkNUCmLXtI8g","executionInfo":{"status":"ok","timestamp":1658326207489,"user_tz":-120,"elapsed":18,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["#Pandas profiling for quick EDA"],"metadata":{"id":"ivewY91I4St1","executionInfo":{"status":"ok","timestamp":1658326207490,"user_tz":-120,"elapsed":18,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}}},"execution_count":26,"outputs":[]},{"cell_type":"code","source":["! pip install https://github.com/pandas-profiling/pandas-profiling/archive/master.zip "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HKZ4DwjT7ka6","executionInfo":{"status":"ok","timestamp":1658326212038,"user_tz":-120,"elapsed":4565,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}},"outputId":"8b939f1c-383c-45b4-885f-6db720a42714"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting https://github.com/pandas-profiling/pandas-profiling/archive/master.zip\n","  Using cached https://github.com/pandas-profiling/pandas-profiling/archive/master.zip\n","Requirement already satisfied: joblib~=1.1.0 in /usr/local/lib/python3.7/dist-packages (from pandas-profiling==3.2.0) (1.1.0)\n","Requirement already satisfied: scipy>=1.4.1 in /usr/local/lib/python3.7/dist-packages (from pandas-profiling==3.2.0) (1.7.3)\n","Requirement already satisfied: pandas!=1.0.0,!=1.0.1,!=1.0.2,!=1.1.0,>=0.25.3 in /usr/local/lib/python3.7/dist-packages (from pandas-profiling==3.2.0) (1.3.5)\n","Requirement already satisfied: matplotlib>=3.2.0 in /usr/local/lib/python3.7/dist-packages (from pandas-profiling==3.2.0) (3.2.2)\n","Requirement already satisfied: pydantic>=1.8.1 in /usr/local/lib/python3.7/dist-packages (from pandas-profiling==3.2.0) (1.8.2)\n","Requirement already satisfied: PyYAML>=5.0.0 in /usr/local/lib/python3.7/dist-packages (from pandas-profiling==3.2.0) (6.0)\n","Requirement already satisfied: jinja2>=2.11.1 in /usr/local/lib/python3.7/dist-packages (from pandas-profiling==3.2.0) (2.11.3)\n","Requirement already satisfied: visions[type_image_path]==0.7.5 in /usr/local/lib/python3.7/dist-packages (from pandas-profiling==3.2.0) (0.7.5)\n","Requirement already satisfied: numpy>=1.16.0 in /usr/local/lib/python3.7/dist-packages (from pandas-profiling==3.2.0) (1.21.6)\n","Requirement already satisfied: htmlmin>=0.1.12 in /usr/local/lib/python3.7/dist-packages (from pandas-profiling==3.2.0) (0.1.12)\n","Requirement already satisfied: missingno>=0.4.2 in /usr/local/lib/python3.7/dist-packages (from pandas-profiling==3.2.0) (0.5.1)\n","Requirement already satisfied: phik>=0.11.1 in /usr/local/lib/python3.7/dist-packages (from pandas-profiling==3.2.0) (0.12.2)\n","Requirement already satisfied: tangled-up-in-unicode==0.2.0 in /usr/local/lib/python3.7/dist-packages (from pandas-profiling==3.2.0) (0.2.0)\n","Requirement already satisfied: requests>=2.24.0 in /usr/local/lib/python3.7/dist-packages (from pandas-profiling==3.2.0) (2.28.1)\n","Requirement already satisfied: tqdm>=4.48.2 in /usr/local/lib/python3.7/dist-packages (from pandas-profiling==3.2.0) (4.64.0)\n","Requirement already satisfied: seaborn>=0.10.1 in /usr/local/lib/python3.7/dist-packages (from pandas-profiling==3.2.0) (0.11.2)\n","Requirement already satisfied: multimethod>=1.4 in /usr/local/lib/python3.7/dist-packages (from pandas-profiling==3.2.0) (1.8)\n","Requirement already satisfied: attrs>=19.3.0 in /usr/local/lib/python3.7/dist-packages (from visions[type_image_path]==0.7.5->pandas-profiling==3.2.0) (21.4.0)\n","Requirement already satisfied: networkx>=2.4 in /usr/local/lib/python3.7/dist-packages (from visions[type_image_path]==0.7.5->pandas-profiling==3.2.0) (2.6.3)\n","Requirement already satisfied: imagehash in /usr/local/lib/python3.7/dist-packages (from visions[type_image_path]==0.7.5->pandas-profiling==3.2.0) (4.2.1)\n","Requirement already satisfied: Pillow in /usr/local/lib/python3.7/dist-packages (from visions[type_image_path]==0.7.5->pandas-profiling==3.2.0) (7.1.2)\n","Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/dist-packages (from jinja2>=2.11.1->pandas-profiling==3.2.0) (2.0.1)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=3.2.0->pandas-profiling==3.2.0) (2.8.2)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=3.2.0->pandas-profiling==3.2.0) (1.4.3)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=3.2.0->pandas-profiling==3.2.0) (0.11.0)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=3.2.0->pandas-profiling==3.2.0) (3.0.9)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from kiwisolver>=1.0.1->matplotlib>=3.2.0->pandas-profiling==3.2.0) (4.1.1)\n","Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas!=1.0.0,!=1.0.1,!=1.0.2,!=1.1.0,>=0.25.3->pandas-profiling==3.2.0) (2022.1)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.1->matplotlib>=3.2.0->pandas-profiling==3.2.0) (1.15.0)\n","Requirement already satisfied: charset-normalizer<3,>=2 in /usr/local/lib/python3.7/dist-packages (from requests>=2.24.0->pandas-profiling==3.2.0) (2.1.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests>=2.24.0->pandas-profiling==3.2.0) (2.10)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.24.0->pandas-profiling==3.2.0) (1.24.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests>=2.24.0->pandas-profiling==3.2.0) (2022.6.15)\n","Requirement already satisfied: PyWavelets in /usr/local/lib/python3.7/dist-packages (from imagehash->visions[type_image_path]==0.7.5->pandas-profiling==3.2.0) (1.3.0)\n"]}]},{"cell_type":"code","source":["from pandas_profiling import ProfileReport"],"metadata":{"id":"Eiz3SqwZ76cB","executionInfo":{"status":"ok","timestamp":1658326212040,"user_tz":-120,"elapsed":16,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}}},"execution_count":28,"outputs":[]},{"cell_type":"code","source":["profile = ProfileReport(df, title='Pandas Profiling Report', html ={'style':{'full_width':True}})\n","profile"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","output_embedded_package_id":"14msrLoqj5Xpgk0cIsSF1SUUWCsC4T_Vv"},"id":"rs5pAlvI8YPA","executionInfo":{"status":"ok","timestamp":1658326301021,"user_tz":-120,"elapsed":33356,"user":{"displayName":"Tunmbi Okediran","userId":"09020317666094241060"}},"outputId":"d834cc30-527e-4c92-aea6-8704bdbd412a"},"execution_count":29,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"code","source":[" "],"metadata":{"id":"NqlP3iiW8rLr"},"execution_count":null,"outputs":[]}]}